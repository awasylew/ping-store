swagger: '2.0'
info:
  description: API do magazynu ping-store.
  version: 1.0.0
  title: ping-store
basePath: /
tags:
- name: pings
  description: Surowe zapisy pojedynczych pingów
- name: agregaty
  description: Agregacja pingów w jednostkach czasu
- name: słowniki
  description: Słowniki do zapytań (stworzone automatycznie z wyników ping)
schemes:
- http
# host: localhost:5000
host: ping-store.herokuapp.com
paths:
  /pings:
    post:
      tags:
      - pings
      summary: Wstawianie wyników ping. 
      description: Wyniki można wstawiać z opóźnieniem i nie w kolejności. Jeśli opóźnienie jest duże, próbka może być odrzucona (komunikat błędu czy ciche odrzucenie?). Nie ma wstawiania wielu próbek na raz.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: body
        description: Obiekt wyniku ping do wstawienia.
        required: true
        schema:
          $ref: '#/definitions/PingResult'
      responses:
        201:
          description: Created
          schema:
            type: integer
            example: 367
    get:
      tags:
      - pings
      summary: Pobiera wyniki ping
      description: Zwraca tablicę wyników opcjonalnie spełniających podane kryteria. A może zamiast start/end zrobić 
      parameters:
      - in: query
        name: limit
        description: Maksymalna liczba wyników do pobrania (domyślnie 10???)
        required: false
        type: integer
      - in: query
        name: offset
        description: Liczba pierwszych wyników do pominięcia (domyślnie 0)
        required: false
        type: integer
      - in: query
        name: origin
        description: Pobieraj tylko wyniki dla podanego źródła
        required: false
        type: string
      - in: query
        name: target
        description: Pobieraj tylko wyniki dla podanego celu
        required: false
        type: string
      - in: query
        name: start
        description: Pobieraj tylko wyniki z podanego czasu późniejsze (porządek leksykograficzny)
        required: false
        type: string
      - in: query
        name: end
        description: Pobieraj tylko wyniki wcześniejsze od podanego czasu (porządek leksykograficzny)
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PingResult'
    delete:
      tags:
      - pings
      summary: Kasuje wyniki ping
      description: Kasuje wyniki (opcjonalnie - tylko spełniające podane kryteria).
      parameters:
      - in: query
        name: limit
        description: Maksymalna liczba wyników do usunięcia (domyślnie 10???)
        required: false
        type: integer
      - in: query
        name: offset
        description: Liczba pierwszych wyników do pominięcia (domyślnie 0)
        required: false
        type: integer
      - in: query
        name: origin
        description: Kasuj tylko wyniki dla podanego źródła
        required: false
        type: integer
      - in: query
        name: target
        description: Kasuj tylko wyniki dla podanego celu
        required: false
        type: integer
      - in: query
        name: start
        description: Kasuj tylko wyniki z podanego czasu późniejsze (porządek leksykograficzny)
        required: false
        type: string
      - in: query
        name: end
        description: Kasuj tylko wyniki wcześniejsze od podanego czasu (porządek leksykograficzny)
        required: false
        type: string
      responses:
        200:
          description: Deleted
  /pings/{ping-id}:
    get:
      tags:
      - pings
      summary: Pobiera pojedynczy wynik ping.
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "text/html"
      parameters:
      - in: path
        name: ping-id
        description: Identyfikator wyniku do pobrania
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PingResult'
        404:
          description: Nie ma takiego wyniku
  /minutes:
    get:
      tags: 
      - agregaty
      summary: Pobieranie dostępnych minut
      description: Sensowne warunki limit, offset, start, end, origin, targt
      responses:
        200:
          description: OK
  /minutes/{minute}:
    get:
      tags:
      - agregaty
      summary: Agregacja wyników ping w minuty
      description: 'Można mieć wiele agregatów za ten sam okres? Można agregować agregaty? A może agreagowanie nie powinno być zlecane tylko dziać się automatycznie? Agregaty można robić też z dancyh surowych na bieżąco np. za pomocą widoków - zajmują więcej miejsca. A może widoki połączą dane surowe i zagregowane (może wymagać transakcyjnej agregacji). Możliwe agregaty: minuta, godzina, doba ping-store/days&date=  -> JSON { start:, end:, expected:(liczba próbek), actual:(liczba próbek), avg... } ping-store/days  - lista dni -> { 2017-08-20, 2018-08-21, ... } "20170820" ping-store/days?date=20170824 albo start=20170824&end=20170825 (wymaga tworów typu +1 różnych poziomach}'
      produces:
      - application/json
      parameters:
      - name: minute
        in: path
        description: Minuta, z której ma być przygotowany agragat (np. 201709072134)
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PingAggregate'
  /hours/{hour}:
    get:
      tags:
      - agregaty
      summary: Agregacja wyników ping w godziny
      produces:
      - application/json
      parameters:
      - name: hour
        in: path
        description: Godzina, z której ma być przygotowany agragat (np. 2017090721)
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PingAggregate'
  /days/{day}:
    get:
      tags:
      - agregaty
      summary: Agregacja wyników ping w dni
      produces:
      - application/json
      parameters:
      - name: day
        in: path
        description: Dzień, z którego ma być przygotowany agragat (np. 20170907)
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PingAggregate'
  /origins:
    get:
      tags:
      - słowniki
      summary: Wszystkie źródła w wynikach ping
      description: Może dodać jeszcze opcjonalne parametry takie jak w GET /pings?
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
  /targets:
    get:
      tags:
      - słowniki
      summary: Wszystkie cele w wynikach ping
      description: Może dodać jeszcze opcjonalne parametry takie jak w GET /pings?
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
definitions:
  PingResult:
    type: object
    required:
    - time
    - origin
    - target
    - success
    - rtt
    properties:
      id:
        type: integer
        description: unikalne, nadawane przez magazyn, nie podawać przy wstawianiu
        example: '367'
      time:
        type: string
        description: czas wykonania testu w formacie tekstowym YYYYMMDDHHMMSS - porządek leksykograficzny pozwala porównywać tekstowo z prefiksami oznaczającymi grubsze jednostki czasu
        example: '20170907094734'
      origin:
        type: string 
        description: określenie miejsca, z którego ping był wykonany
        example: 'A8'
      target:
        type: string 
        description: bo można badać wiele różnych hostów
        example: 'onet.pl'
      success:
        type: boolean 
        description: 0/1 w zależności od tego czy ping doszedł do skutku, w zadanym czasie granicznym) a może jednak zmienić w true/false ew. mapowane na 0/1 w bazie danych?
        example: true
        # enum:
        # - 0
        # - 1
      rtt:
        type: integer 
        description: liczba milisekund RTT, None/null? jeśli ping nie był skuteczy
        example: '37'
  PingAggregate:
    type: object
    required:
    - start
    - end
    - expected
    - actual
    - avg-success
    - avg-time
    properties:
      start:
        type: string
        description: Początkowy moment agregatu (włącznie z tym punktem, liczba końcowych zer zależna od poziomu agregacji)
        example: 20170907220000
      end:
        type: string
        description: Końcowy moment agregatu (bez tego punktu, liczba końcowych zer zależna od poziomu agregacji)
        example: 20170907230000
      expected:
        type: integer
        description: Oczekiwana liczba próbek w danym okresie (to przy założeniu, że kolejne próbki są np. dokładnie co 1 sekundę????? - skąd to wiadomo)
        example: 86400
      actual:
        type: integer
        description: Faktyczna liczna zarejestrowanych próbek
        example: 84354
      avg-success:
        type: number
        description: Współczynnik sukcesu wywołania ping (w ramach zarejestrowanych a nie oczekiwanych próbek)
        example: 0.98
      avg-time:
        type: number
        description: Średni czas rtt w danym okresie
        example: 23.54